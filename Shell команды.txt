from news.models import *
Vlad = User.objects.create_user('Vlad')
Sergey = User.objects.create_user('Sergey')
a1 = Author.objects.create(user = Vlad)
a2 = Author.objects.create(user = Sergey)
cat1 = Category.objects.create(category = 'Habr')
cat2 = Category.objects.create(category = 'Законодательство в IT')
cat3 = Category.objects.create(category = 'Космонавтика')
cat4 = Category.objects.create(category = 'Луна')
post1 = Post.objects.create(author = a1, type = Post.article, header = 'Как я Хабр взломал', text = 'Всегда хотел взломать Хабр. Мечта такая, но как-то руки не доходили. И вот, вдохновившись статьей о праведной борьбе с Безумным Максом, я, как и автор поста, решил исследовать функционал Хабра на предмет уязвимостей. Начать решил с нового редактора, рассуждая следующим образом: раз он новый, то и уязвимости там точно должны быть.')
post1.category.add(cat1)
post1.category.add(cat2)
post2 = Post.objects.create(author = a1, type = Post.article, header = 'Отрасль IT в России поставили на паузу', text = 'Intel, AMD, Dell, Lenovo, HP etc, короче - все серьезные высокотехнологичные компании прекращают работу с Россией. Из публичных источников: AMD и Intel приостановили поставки своей продукции на территорию России, США потребовали от TSMС прекратить сотрудничество с Россией. Есть риск полной остановки поставок видеокарт и других компонентов из Юго-Восточной Азии.')
post2.category.add(Category.objects.all()[0])
post2.category.add(Category.objects.all()[1])
post3 = Post.objects.create(author = a2, type = Post.new, header = 'Программа НАСА по посадке человека на Луну наконец-то получила полное финансирование', text = 'В случае подписания законопроекта о расходах Конгресса будет обеспечено полное финансирование ряда крупных проектов НАСА, которые за последние годы не получали деньги в полном объеме. Программы разработки посадочного модуля с астронавтами на Луну и новых коммерческих космических станций будут дотироваться в соответствии с требованиями президентского бюджета.')
post3.category.add(Category.objects.all()[0])
post3.category.add(Category.objects.all()[2])
post3.category.add(Category.objects.all()[3])
c1 = Comment.objects.create(post = post1, user = Sergey, text = 'Класс')
c2 = Comment.objects.create(post = post2, user = Sergey, text = 'Дожили')
c3 = Comment.objects.create(post = post3, user = Sergey, text = 'Интересно')
c4 = Comment.objects.create(post = post3, user = Vlad, text = 'Я о том же')
c1.like() (много раз)
c2.like() (много раз)
c3.like() (много раз)
c4.like() (много раз)
post1.like() (много раз)
post2.like() (много раз)
post3.like() (много раз)
a1.update_rating()
a2.update_rating()
Author.objects.filter().order_by('-rating').values('user__username', 'rating')[0]
bp = Post.objects.filter(type='AR').order_by('-rating')
bp.values('time_create', 'author__user__username', 'rating', 'header')[0]
bp[0].preview()
bp.values('comment__time_create', 'comment__user__username','comment__rating', 'comment__text')[0]